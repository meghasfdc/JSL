group 'rossetti'
version '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
}

apply plugin: 'java-library'

sourceCompatibility = 1.8

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.3'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'

//apply plugin: 'java'


dependencies {

    // https://mvnrepository.com/artifact/com.opencsv/opencsv
    api group: 'com.opencsv', name: 'opencsv', version: '4.2'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-math3
    api group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'

    // https://mvnrepository.com/artifact/tech.tablesaw/tablesaw-core
    api group: 'tech.tablesaw', name: 'tablesaw-core', version: '0.25.2'

    // https://mvnrepository.com/artifact/tech.tablesaw/tablesaw-plot
    api group: 'tech.tablesaw', name: 'tablesaw-jsplot', version: '0.25.2'

//    // https://mvnrepository.com/artifact/tech.tablesaw/tablesaw-smile
//    api group: 'tech.tablesaw', name: 'tablesaw-smile', version: '0.12.0'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    api group: 'com.google.guava', name: 'guava', version: '23.5-jre'

    // https://mvnrepository.com/artifact/org.apache.derby/derby
    implementation group: 'org.apache.derby', name: 'derby', version: '10.14.1.0'
    // https://mvnrepository.com/artifact/org.apache.derby/derbyclient
    implementation group: 'org.apache.derby', name: 'derbyclient', version: '10.14.1.0'

    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.2'

    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.2.0'

    // https://mvnrepository.com/artifact/org.jooq/jooq
    api group: 'org.jooq', name: 'jooq', version: '3.10.4'
    // https://mvnrepository.com/artifact/org.jooq/jooq-meta
    api group: 'org.jooq', name: 'jooq-meta', version: '3.10.4'
    // https://mvnrepository.com/artifact/org.jooq/jooq-codegen
    api group: 'org.jooq', name: 'jooq-codegen', version: '3.10.4'
    // this is to use jooq code generation from script
    runtime group: 'org.jooq', name: 'jooq-meta-extensions', version: '3.10.4'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
//    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'

    // https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation group: 'org.apache.poi', name: 'poi', version: '3.17'
    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'

    // include local jar files found in libs folder in the compile
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // https://mvnrepository.com/artifact/org.hsqldb/hsqldb
//    implementation group: 'org.hsqldb', name: 'hsqldb', version: '2.4.1'

    testCompile('org.junit.jupiter:junit-jupiter-api:5.3.1')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.3.1')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.1')

//    testCompile group: 'junit', name: 'junit', version: '4.12'

}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
    exclude('logback.xml')
}

uploadArchives {
    repositories {
        flatDir {
            dirs 'jarOutputDir'
        }
    }
}

uploadShadow {
    repositories {
        flatDir {
            dirs 'jarOutputDir'
        }
    }
}
// exclude all tests from the builder
// comment this out if you want to run the tests
test {
    exclude '**/**'
//    useJUnitPlatform()
//    testLogging {
//        events "passed", "skipped", "failed"
//    }
}

