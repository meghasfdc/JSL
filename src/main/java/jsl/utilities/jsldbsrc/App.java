/*
 * Copyright (c) 2018. Manuel D. Rossetti, manuelrossetti@gmail.com
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/*
 * This file is generated by jOOQ.
*/
package jsl.utilities.jsldbsrc;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jsl.utilities.jsldbsrc.tables.AcrossRepStat;
import jsl.utilities.jsldbsrc.tables.BatchStat;
import jsl.utilities.jsldbsrc.tables.ModelElement;
import jsl.utilities.jsldbsrc.tables.SimulationRun;
import jsl.utilities.jsldbsrc.tables.WithinRepCounterStat;
import jsl.utilities.jsldbsrc.tables.WithinRepStat;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class App extends SchemaImpl {

    private static final long serialVersionUID = 218983926;

    /**
     * The reference instance of <code>APP</code>
     */
    public static final App APP = new App();

    /**
     * The table <code>APP.ACROSS_REP_STAT</code>.
     */
    public final AcrossRepStat ACROSS_REP_STAT = jsl.utilities.jsldbsrc.tables.AcrossRepStat.ACROSS_REP_STAT;

    /**
     * The table <code>APP.BATCH_STAT</code>.
     */
    public final BatchStat BATCH_STAT = jsl.utilities.jsldbsrc.tables.BatchStat.BATCH_STAT;

    /**
     * The table <code>APP.MODEL_ELEMENT</code>.
     */
    public final ModelElement MODEL_ELEMENT = jsl.utilities.jsldbsrc.tables.ModelElement.MODEL_ELEMENT;

    /**
     * The table <code>APP.SIMULATION_RUN</code>.
     */
    public final SimulationRun SIMULATION_RUN = jsl.utilities.jsldbsrc.tables.SimulationRun.SIMULATION_RUN;

    /**
     * The table <code>APP.WITHIN_REP_COUNTER_STAT</code>.
     */
    public final WithinRepCounterStat WITHIN_REP_COUNTER_STAT = jsl.utilities.jsldbsrc.tables.WithinRepCounterStat.WITHIN_REP_COUNTER_STAT;

    /**
     * The table <code>APP.WITHIN_REP_STAT</code>.
     */
    public final WithinRepStat WITHIN_REP_STAT = jsl.utilities.jsldbsrc.tables.WithinRepStat.WITHIN_REP_STAT;

    /**
     * No further instances allowed
     */
    private App() {
        super("APP", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            AcrossRepStat.ACROSS_REP_STAT,
            BatchStat.BATCH_STAT,
            ModelElement.MODEL_ELEMENT,
            SimulationRun.SIMULATION_RUN,
            WithinRepCounterStat.WITHIN_REP_COUNTER_STAT,
            WithinRepStat.WITHIN_REP_STAT);
    }
}
