/*
 * This file is generated by jOOQ.
*/
package jsl.utilities.jsldbsrc.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import jsl.utilities.jsldbsrc.JslDb;
import jsl.utilities.jsldbsrc.Keys;
import jsl.utilities.jsldbsrc.tables.records.AcrossRepStatRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AcrossRepStat extends TableImpl<AcrossRepStatRecord> {

    private static final long serialVersionUID = -1629536490;

    /**
     * The reference instance of <code>JSL_DB.ACROSS_REP_STAT</code>
     */
    public static final AcrossRepStat ACROSS_REP_STAT = new AcrossRepStat();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AcrossRepStatRecord> getRecordType() {
        return AcrossRepStatRecord.class;
    }

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.ID</code>.
     */
    public final TableField<AcrossRepStatRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.ELEMENT_ID_FK</code>.
     */
    public final TableField<AcrossRepStatRecord, Integer> ELEMENT_ID_FK = createField("ELEMENT_ID_FK", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.SIM_RUN_ID_FK</code>.
     */
    public final TableField<AcrossRepStatRecord, Integer> SIM_RUN_ID_FK = createField("SIM_RUN_ID_FK", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.STAT_NAME</code>.
     */
    public final TableField<AcrossRepStatRecord, String> STAT_NAME = createField("STAT_NAME", org.jooq.impl.SQLDataType.VARCHAR(510), this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.STAT_COUNT</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> STAT_COUNT = createField("STAT_COUNT", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.AVERAGE</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> AVERAGE = createField("AVERAGE", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.STD_DEV</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> STD_DEV = createField("STD_DEV", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.STD_ERR</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> STD_ERR = createField("STD_ERR", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.HALF_WIDTH</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> HALF_WIDTH = createField("HALF_WIDTH", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.CONF_LEVEL</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> CONF_LEVEL = createField("CONF_LEVEL", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.MINIMUM</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> MINIMUM = createField("MINIMUM", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.MAXIMUM</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> MAXIMUM = createField("MAXIMUM", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.WEIGHTED_SUM</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> WEIGHTED_SUM = createField("WEIGHTED_SUM", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.SUM_OF_WEIGHTS</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> SUM_OF_WEIGHTS = createField("SUM_OF_WEIGHTS", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.WEIGHTED_SSQ</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> WEIGHTED_SSQ = createField("WEIGHTED_SSQ", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.DEV_SSQ</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> DEV_SSQ = createField("DEV_SSQ", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.LAST_VALUE</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> LAST_VALUE = createField("LAST_VALUE", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.LAST_WEIGHT</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> LAST_WEIGHT = createField("LAST_WEIGHT", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.KURTOSIS</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> KURTOSIS = createField("KURTOSIS", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.SKEWNESS</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> SKEWNESS = createField("SKEWNESS", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.LAG1_COV</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> LAG1_COV = createField("LAG1_COV", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.LAG1_CORR</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> LAG1_CORR = createField("LAG1_CORR", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.VON_NEUMAN_LAG1_STAT</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> VON_NEUMAN_LAG1_STAT = createField("VON_NEUMAN_LAG1_STAT", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>JSL_DB.ACROSS_REP_STAT.NUM_MISSING_OBS</code>.
     */
    public final TableField<AcrossRepStatRecord, Double> NUM_MISSING_OBS = createField("NUM_MISSING_OBS", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>JSL_DB.ACROSS_REP_STAT</code> table reference
     */
    public AcrossRepStat() {
        this(DSL.name("ACROSS_REP_STAT"), null);
    }

    /**
     * Create an aliased <code>JSL_DB.ACROSS_REP_STAT</code> table reference
     */
    public AcrossRepStat(String alias) {
        this(DSL.name(alias), ACROSS_REP_STAT);
    }

    /**
     * Create an aliased <code>JSL_DB.ACROSS_REP_STAT</code> table reference
     */
    public AcrossRepStat(Name alias) {
        this(alias, ACROSS_REP_STAT);
    }

    private AcrossRepStat(Name alias, Table<AcrossRepStatRecord> aliased) {
        this(alias, aliased, null);
    }

    private AcrossRepStat(Name alias, Table<AcrossRepStatRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JslDb.JSL_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AcrossRepStatRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACROSS_REP_STAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AcrossRepStatRecord> getPrimaryKey() {
        return Keys.SQL190415110855930;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AcrossRepStatRecord>> getKeys() {
        return Arrays.<UniqueKey<AcrossRepStatRecord>>asList(Keys.SQL190415110855930);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AcrossRepStatRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AcrossRepStatRecord, ?>>asList(Keys.ARS_MODEL_ELEMENT_FK, Keys.ARS_SIMRUN_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AcrossRepStat as(String alias) {
        return new AcrossRepStat(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AcrossRepStat as(Name alias) {
        return new AcrossRepStat(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AcrossRepStat rename(String name) {
        return new AcrossRepStat(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AcrossRepStat rename(Name name) {
        return new AcrossRepStat(name, null);
    }
}
