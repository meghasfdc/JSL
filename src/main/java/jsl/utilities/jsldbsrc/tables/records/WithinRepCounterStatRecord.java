/*
 * This file is generated by jOOQ.
*/
package jsl.utilities.jsldbsrc.tables.records;


import javax.annotation.Generated;

import jsl.utilities.jsldbsrc.tables.WithinRepCounterStat;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WithinRepCounterStatRecord extends UpdatableRecordImpl<WithinRepCounterStatRecord> implements Record6<Integer, String, Integer, String, Integer, Double> {

    private static final long serialVersionUID = -1025569495;

    /**
     * Setter for <code>APP.WITHIN_REP_COUNTER_STAT.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>APP.WITHIN_REP_COUNTER_STAT.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>APP.WITHIN_REP_COUNTER_STAT.MODEL_ELEMENT_NAME</code>.
     */
    public void setModelElementName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>APP.WITHIN_REP_COUNTER_STAT.MODEL_ELEMENT_NAME</code>.
     */
    public String getModelElementName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>APP.WITHIN_REP_COUNTER_STAT.SIM_RUN_ID_FK</code>.
     */
    public void setSimRunIdFk(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>APP.WITHIN_REP_COUNTER_STAT.SIM_RUN_ID_FK</code>.
     */
    public Integer getSimRunIdFk() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>APP.WITHIN_REP_COUNTER_STAT.STAT_NAME</code>.
     */
    public void setStatName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>APP.WITHIN_REP_COUNTER_STAT.STAT_NAME</code>.
     */
    public String getStatName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>APP.WITHIN_REP_COUNTER_STAT.REP_NUM</code>.
     */
    public void setRepNum(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>APP.WITHIN_REP_COUNTER_STAT.REP_NUM</code>.
     */
    public Integer getRepNum() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>APP.WITHIN_REP_COUNTER_STAT.LAST_VALUE</code>.
     */
    public void setLastValue(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>APP.WITHIN_REP_COUNTER_STAT.LAST_VALUE</code>.
     */
    public Double getLastValue() {
        return (Double) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Integer, String, Integer, Double> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, Integer, String, Integer, Double> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return WithinRepCounterStat.WITHIN_REP_COUNTER_STAT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return WithinRepCounterStat.WITHIN_REP_COUNTER_STAT.MODEL_ELEMENT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return WithinRepCounterStat.WITHIN_REP_COUNTER_STAT.SIM_RUN_ID_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return WithinRepCounterStat.WITHIN_REP_COUNTER_STAT.STAT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return WithinRepCounterStat.WITHIN_REP_COUNTER_STAT.REP_NUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return WithinRepCounterStat.WITHIN_REP_COUNTER_STAT.LAST_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getModelElementName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getSimRunIdFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getStatName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getRepNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getLastValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getModelElementName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSimRunIdFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getStatName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getRepNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getLastValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithinRepCounterStatRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithinRepCounterStatRecord value2(String value) {
        setModelElementName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithinRepCounterStatRecord value3(Integer value) {
        setSimRunIdFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithinRepCounterStatRecord value4(String value) {
        setStatName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithinRepCounterStatRecord value5(Integer value) {
        setRepNum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithinRepCounterStatRecord value6(Double value) {
        setLastValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WithinRepCounterStatRecord values(Integer value1, String value2, Integer value3, String value4, Integer value5, Double value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WithinRepCounterStatRecord
     */
    public WithinRepCounterStatRecord() {
        super(WithinRepCounterStat.WITHIN_REP_COUNTER_STAT);
    }

    /**
     * Create a detached, initialised WithinRepCounterStatRecord
     */
    public WithinRepCounterStatRecord(Integer id, String modelElementName, Integer simRunIdFk, String statName, Integer repNum, Double lastValue) {
        super(WithinRepCounterStat.WITHIN_REP_COUNTER_STAT);

        set(0, id);
        set(1, modelElementName);
        set(2, simRunIdFk);
        set(3, statName);
        set(4, repNum);
        set(5, lastValue);
    }
}
