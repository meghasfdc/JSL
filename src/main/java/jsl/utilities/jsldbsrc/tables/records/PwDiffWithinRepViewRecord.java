/*
 * This file is generated by jOOQ.
*/
package jsl.utilities.jsldbsrc.tables.records;


import javax.annotation.Generated;

import jsl.utilities.jsldbsrc.tables.PwDiffWithinRepView;

import org.jooq.Field;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PwDiffWithinRepViewRecord extends TableRecordImpl<PwDiffWithinRepViewRecord> implements Record11<String, Integer, String, String, Integer, Double, Integer, String, Double, String, Double> {

    private static final long serialVersionUID = 752776863;

    /**
     * Setter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.SIM_NAME</code>.
     */
    public void setSimName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.SIM_NAME</code>.
     */
    public String getSimName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.A_SIM_NUM</code>.
     */
    public void setASimNum(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.A_SIM_NUM</code>.
     */
    public Integer getASimNum() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.STAT_NAME</code>.
     */
    public void setStatName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.STAT_NAME</code>.
     */
    public String getStatName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.A_EXP_NAME</code>.
     */
    public void setAExpName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.A_EXP_NAME</code>.
     */
    public String getAExpName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.REP_NUM</code>.
     */
    public void setRepNum(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.REP_NUM</code>.
     */
    public Integer getRepNum() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.A_VALUE</code>.
     */
    public void setAValue(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.A_VALUE</code>.
     */
    public Double getAValue() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.B_SIM_NUM</code>.
     */
    public void setBSimNum(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.B_SIM_NUM</code>.
     */
    public Integer getBSimNum() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.B_EXP_NAME</code>.
     */
    public void setBExpName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.B_EXP_NAME</code>.
     */
    public String getBExpName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.B_VALUE</code>.
     */
    public void setBValue(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.B_VALUE</code>.
     */
    public Double getBValue() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.DIFF_NAME</code>.
     */
    public void setDiffName(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.DIFF_NAME</code>.
     */
    public String getDiffName() {
        return (String) get(9);
    }

    /**
     * Setter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.A_MINUS_B</code>.
     */
    public void setAMinusB(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>JSL_DB.PW_DIFF_WITHIN_REP_VIEW.A_MINUS_B</code>.
     */
    public Double getAMinusB() {
        return (Double) get(10);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<String, Integer, String, String, Integer, Double, Integer, String, Double, String, Double> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<String, Integer, String, String, Integer, Double, Integer, String, Double, String, Double> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW.SIM_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW.A_SIM_NUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW.STAT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW.A_EXP_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW.REP_NUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW.A_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW.B_SIM_NUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW.B_EXP_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW.B_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW.DIFF_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field11() {
        return PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW.A_MINUS_B;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getSimName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getASimNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getStatName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getAExpName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getRepNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getAValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getBSimNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getBExpName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component9() {
        return getBValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getDiffName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component11() {
        return getAMinusB();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getSimName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getASimNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getStatName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getAExpName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getRepNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getAValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getBSimNum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getBExpName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getBValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getDiffName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value11() {
        return getAMinusB();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord value1(String value) {
        setSimName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord value2(Integer value) {
        setASimNum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord value3(String value) {
        setStatName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord value4(String value) {
        setAExpName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord value5(Integer value) {
        setRepNum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord value6(Double value) {
        setAValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord value7(Integer value) {
        setBSimNum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord value8(String value) {
        setBExpName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord value9(Double value) {
        setBValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord value10(String value) {
        setDiffName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord value11(Double value) {
        setAMinusB(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PwDiffWithinRepViewRecord values(String value1, Integer value2, String value3, String value4, Integer value5, Double value6, Integer value7, String value8, Double value9, String value10, Double value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PwDiffWithinRepViewRecord
     */
    public PwDiffWithinRepViewRecord() {
        super(PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW);
    }

    /**
     * Create a detached, initialised PwDiffWithinRepViewRecord
     */
    public PwDiffWithinRepViewRecord(String simName, Integer aSimNum, String statName, String aExpName, Integer repNum, Double aValue, Integer bSimNum, String bExpName, Double bValue, String diffName, Double aMinusB) {
        super(PwDiffWithinRepView.PW_DIFF_WITHIN_REP_VIEW);

        set(0, simName);
        set(1, aSimNum);
        set(2, statName);
        set(3, aExpName);
        set(4, repNum);
        set(5, aValue);
        set(6, bSimNum);
        set(7, bExpName);
        set(8, bValue);
        set(9, diffName);
        set(10, aMinusB);
    }
}
